<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AgurkAPI</title>
    <link rel="stylesheet" href="styles/dashboard.css">
    <script>
        const user = <%- JSON.stringify(user) %>;
    </script>
</head>

<body>
    <div class="topBar">
        <div class="nav">
            <a class ="links" href="guide" id="guideBtn">GUIDE</a>
            <a class ="links" href="logout" id="logOutBtn">SIGN OUT</a>
        </div>
        <div class="welcome">
            <h2>Welcome <%=user.info.name.full%></h2>
        </div>
        <div class="logoContainer">
            <img src="images/logo.png" id="logo">
            <a id="logoRef" href="/node1/">AgurkAPI</a>
        </div>
    </div>
    <div class="pageContainer">
        <div class="wrapper">
            <h1>Information</h1>
            <p>Name: <%=user.info.name.full%></p>
            <p>E-mail: <%=user.info.email%></p>
            <br><br><br><br>
            <div id="availableApplicationsContainer">
                <h1>Applications</h1>
            </div>

            <div id="addApplicationContainer">

            </div>

        </div>
        <div class="groupWrapper">
            <div id="groupTitle">
                <h1 id="groupTitle">Groups</h1>
            </div>
            <div id="createGroup"></div>
            <div id="manageGroup"></div>
        </div>
    </div>
</body>
<script id="dashboard">
    const availableApps = <%- JSON.stringify(availableApps) %>;
    const missingApps = <%- JSON.stringify(missingApps) %>;
    const addAppContainer = document.getElementById('addApplicationContainer')
    const availableApplicationsContainer = document.getElementById('availableApplicationsContainer')
    let availableAppsHTML = document.createElement('div')
    let hasNonPrimary = 0;

    if (typeof user.apps != 'undefined') {
        if (typeof user.apps.communication != 'undefined' && Object.keys(user.apps.communication).length !== 0) {
            availableAppsHTML.insertAdjacentHTML('beforeend', "<h2>Communication:</h2>")
            availableApps.communication.forEach(function (value) {
                let string = value.charAt(0).toUpperCase() + value.slice(1)
                if (value == user.apps.communication.primary) {
                    availableAppsHTML.insertAdjacentHTML('beforeend', `<p>${string} </p>`)
                } else {
                    availableAppsHTML.insertAdjacentHTML('beforeend',
                        `<p>${string}<button name="id" value="${value}" data-value="communication" type="submit"
                                                          id="makePrimaryBtn" style="padding: 0; margin: 0; margin-left: 2rem">Make Primary</button></p>`
                        );
                    hasNonPrimary = 1;
                }
            })
        }
        if (typeof user.apps.calendar != 'undefined' && Object.keys(user.apps.calendar).length !== 0) {
            availableAppsHTML.insertAdjacentHTML('beforeend', "<h2>Calendar:</h2>")
            availableApps.calendar.forEach(function (value) {
                let string = value.charAt(0).toUpperCase() + value.slice(1)
                string = string.replace(/[A-Z]/g, ' $&').trim()
                if (value == user.apps.calendar.primary) {
                    availableAppsHTML.insertAdjacentHTML('beforeend', `<p>${string} </p>`)
                } else {
                    availableAppsHTML.insertAdjacentHTML('beforeend',
                        `<p>${string}<button name="id" value="${value}" data-value="calendar" type="submit"
                                                          id="makePrimaryBtn" style="padding: 0; margin: 0; margin-left: 2rem">Make Primary</button></p>`
                        );
                    hasNonPrimary = 1;
                }
            })
        }
        if (typeof user.apps.kanban != 'undefined' && Object.keys(user.apps.kanban).length !== 0) {
            availableAppsHTML.insertAdjacentHTML('beforeend', "<h2>Kanban:</h2>")
            availableApps.kanban.forEach(function (value) {
                let string = value.charAt(0).toUpperCase() + value.slice(1)
                if (value == user.apps.kanban.primary) {
                    availableAppsHTML.insertAdjacentHTML('beforeend', `<p>${string} </p>`)
                } else {
                    availableAppsHTML.insertAdjacentHTML('beforeend',
                        `<p>${string}<button name="id" value="${value}" data-value="kanban" type="submit"
                                                          id="makePrimaryBtn" style="padding: 0; margin: 0; margin-left: 2rem">Make Primary</button></p>`
                        );
                    hasNonPrimary = 1;
                }
            })
        }
    }
    availableApplicationsContainer.appendChild(availableAppsHTML)

    if (user.apps == 'undefined' || missingApps.communication.length > 0 || missingApps.kanban.length > 0 || missingApps.calendar.length > 0) {
        addAppContainer.insertAdjacentHTML('beforeend', `
              <h3>Add Application</h3>
              <% if(missingApps.communication.length > 0) { %>
                 Communication <input type="radio" id="applicationTypeCom" name="applicationType" value="Communication">
              <% } %>
              <% if(missingApps.kanban.length > 0) { %>
              Kanban <input type="radio" id="applicationTypeKan" name="applicationType" value="Kanban">
              <% } %>
              <% if(missingApps.calendar.length > 0) { %>
              Calendar <input type="radio" id="applicationTypeCal" name="applicationType" value="Calendar">
              <% } %>
              <div id="communicationForms">
                  <select name="appName" id="communicationSelect" style="display: none">
                      <option value="" disabled selected hidden>-- CHOOSE AN OPTION --</option>
                      <% for (var i = 0; i < missingApps.communication.length; i++) { %>
                      <option value="<%-missingApps.communication[i]%>"><%=missingApps.communication[i].charAt(0).toUpperCase() + missingApps.communication[i].slice(1)%></option>
                      <% } %>
                  </select>
                  <form id="discordForm" class="communicationForms" action="addApplication" method="post" style="display: none">
                      <input type="text" name="appName" value="discord" hidden>
                      <input type="text" name="token" placeholder="TOKEN">
                      <input type="text" name="channelId" placeholder="CHANNEL ID">
                      <input type="submit" value="ADD">
                  </form>
                  <form id="slackForm" class="communicationForms" action="addApplication" method="post" style="display: none">
                      <input type="text" name="appName" value="slack" hidden>
                      <input type="text" name="token" placeholder="TOKEN">
                      <input type="text" name="channelId" placeholder="CHANNEL NAME">
                      <input type="submit" value="ADD">
                  </form>
              </div>
              <div id="kanbanForms">
                  <select name="appName" id="kanbanSelect" style="display: none">
                      <option value="" disabled selected hidden>-- CHOOSE AN OPTION --</option>
                      <% for (var i = 0; i < missingApps.kanban.length; i++) { %>
                      <option value="<%-missingApps.kanban[i]%>"><%=missingApps.kanban[i].charAt(0).toUpperCase() + missingApps.kanban[i].slice(1)%></option>
                      <% } %>
                  </select>
                  <form id="trelloForm" class="kanbanForms" action="addApplication" method="post" style="display: none">
                      <input type="text" name="appName" value="trello" hidden>
                      <input type="text" name="token" placeholder="TOKEN">
                      <input type="text" name="key" placeholder="KEY">
                      <input type="submit" value="ADD">
                  </form> 
                  <form id="krakenForm" class="kanbanForms" action="addApplication" method="post" style="display: none">
                      <input type="text" name="appName" value="GitKraken" hidden>
                      <input type="text" name="token" placeholder="TOKEN">
                      <input type="text" name="key" placeholder="KEY">
                      <input type="submit" value="ADD">
                  </form> 
              </div>
              <div id="calendarForms">
                  <select name="appName" id="calendarSelect" style="display: none">
                      <option value="" disabled selected hidden>-- CHOOSE AN OPTION --</option>
                      <% for (var i = 0; i < missingApps.calendar.length; i++) { %>
                      <option value="<%-missingApps.calendar[i]%>"><%=missingApps.calendar[i].charAt(0).toUpperCase() + missingApps.calendar[i].slice(1)%></option>
                      <% } %>
                  </select>
                  <form id="googleForm" class="calendarForms" action="addApplication" method="post" style="display: none">
                      <input type="text" name="appName" value="google" hidden>
                      <input type="text" name="refreshToken" placeholder="REFRESH TOKEN">
                      <br>
                      <input type="text" name="clientId" placeholder="CLIENT ID">
                      <br>
                      <input type="text" name="clientSecret" placeholder="CLIENT SECRET">
                      <input type="submit" value="ADD">
                  </form>
              </div>
              `);
        let kanbanForms = document.getElementById('kanbanForms')
        let kanbanFormsArr = document.getElementsByClassName('kanbanForms')
        let communicationForms = document.getElementById('communicationForms')
        let communicationFormsArr = document.getElementsByClassName('communicationForms')
        let calendarForms = document.getElementById('calendarForms')
        let calendarFormsArr = document.getElementsByClassName('calendarForms')
        let communicationSelect = document.getElementById('communicationSelect')
        let kanbanSelect = document.getElementById('kanbanSelect')
        let calendarSelect = document.getElementById('calendarSelect')
        if (document.getElementById('applicationTypeCom')) {
            let commsMenuRadio = document.getElementById('applicationTypeCom')
            commsMenuRadio.onchange = (e) => {
                communicationSelect.style.display = 'block';
                communicationForms.style.display = 'block'
                for(let form of calendarFormsArr) {
                    form.style.display = 'none'
                }
                for(let form of kanbanFormsArr) {
                    form.style.display = 'none'
                }
                if (kanbanSelect)
                    kanbanSelect.value = ''
                    kanbanSelect.style.display = 'none';
                if (kanbanForms)
                    kanbanForms.style.display = 'none'
                if (calendarSelect)
                    calendarSelect.value = ''
                    calendarSelect.style.display = 'none';
                if (calendarForms)
                    calendarForms.style.display = 'none'
            }
        }

        if (document.getElementById('applicationTypeKan')) {
            let kanMenuRadio = document.getElementById('applicationTypeKan')
            kanMenuRadio.onchange = (e) => {
                kanbanSelect.style.display = 'block'
                kanbanForms.style.display = 'block'
                for(let form of communicationFormsArr) {
                    form.style.display = 'none'
                }
                for(let form of calendarFormsArr) {
                    form.style.display = 'none'
                }
                if (communicationSelect)
                    communicationSelect.value = ""
                    communicationSelect.style.display = 'none'
                if (communicationForms)
                    communicationForms.style.display = 'none'
                if (calendarSelect)
                    calendarSelect.style.display = 'none'
                    calendarSelect.value = ""
                if (calendarForms)
                    calendarForms.style.display = 'none'
            }
        }

        if (document.getElementById('applicationTypeCal')) {
            let calMenuRadio = document.getElementById('applicationTypeCal')
            calMenuRadio.onchange = (e) => {
                calendarSelect.style.display = 'block'
                calendarForms.style.display = 'block'
                for(let form of communicationFormsArr) {
                    form.style.display = 'none'
                }
                for(let form of kanbanFormsArr) {
                    form.style.display = 'none'
                }
                if (communicationSelect)
                    communicationSelect.value = ''
                    communicationSelect.style.display = 'none'
                if (communicationForms)
                    communicationForms.style.display = 'none'
                if (kanbanSelect)
                    kanbanSelect.value = ''
                    kanbanSelect.style.display = 'none'
                if (kanbanForms)
                    kanbanForms.style.display = 'none'
            }
        }
        //   let kanMenuRadio = document.getElementById('applicationTypeKan')
        //   let calMenuRadio = document.getElementById('applicationTypeCal')




        communicationSelect.onchange = (e) => {
            if (communicationSelect.value == 'discord') {
                discordForm.style.display = 'block';
                slackForm.style.display = 'none'
            } else if (communicationSelect.value == 'slack') {
                slackForm.style.display = 'block';
                discordForm.style.display = 'none';
            }
        }

        kanbanSelect.onchange = (e) => {
            if (kanbanSelect.value == 'trello') {
                trelloForm.style.display = 'block';
                krakenForm.style.display = 'none'
            } else if (kanbanSelect.value == 'gitkraken') {
                krakenForm.style.display = 'block';
                trelloForm.style.display = 'none';
            }
        }

        calendarSelect.onchange = (e) => {
            console.log(calendarSelect.value)
            if (calendarSelect.value == 'google') {
                googleForm.style.display = 'block'
            }
        }

        if (missingApps.communication.length == 0) {
            commsMenuRadio.style.display = 'none'
        }
        if (missingApps.kanban.length == 0) {
            KanMenuRadio.style.display = 'none'
        }
        if (missingApps.calendar.length == 0) {
            calMenuRadio.style.display = 'none'
        }

    }

    let makePrimary = document.getElementById('makePrimaryBtn')
    if (hasNonPrimary) {
        makePrimary.addEventListener('click', async () => {
            let app = makePrimary.value;
            let category = makePrimary.getAttribute('data-value')
            let body = new Object({
                app,
                category
            })
            const response = await fetch('makePrimary', {
                method: 'post',
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(body)
            }).then(res => res.json()).then(data => window.location.reload())
        });
    }
</script>
<script id="groups">
    const createGroupDiv = document.getElementById('createGroup')
    const manageGroupDiv = document.getElementById('manageGroup')

    let createGroupHTML = document.createElement('div')
    let leaveGroupHTML = document.createElement('div')
    let joinGroupHTML = document.createElement('div')
    let manageGroupHTML;


    createGroupHTML.insertAdjacentHTML('beforeend', `
    <p>Group: <button name="id" value="create" data-value="communication" type="submit"
    id="createGroupBtn" style="padding: 0; margin: 0; margin-left: 2rem">CREATE GROUP</button></p>
`)

    leaveGroupHTML.insertAdjacentHTML('beforeend', `
<button name="id" value="leave" data-value="communication" type="submit"
    id="leaveGroupBtn" style="padding: 0; margin: 0; margin-left:0">LEAVE GROUP</button>
`)

    joinGroupHTML.insertAdjacentHTML('beforeend', `
    <form id="joinGroup" action="joinGroup" method="post" style="display: block">
        <input type="text" name="groupId">
        <input type="submit" value="JOIN">
    </form>
`)

    if (typeof user.groupId != 'undefined') {


        createGroupHTML.innerHTML = `
    <p>Group: ${user.groupId}<p>`

        createGroupDiv.appendChild(createGroupHTML)
        manageGroupHTML = leaveGroupHTML
        manageGroupDiv.appendChild(manageGroupHTML)

        let leaveGroupBtn = document.getElementById('leaveGroupBtn')
        leaveGroupBtn.addEventListener('click', async () => {
            const response = await fetch('leaveGroup', {
                method: 'delete',
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(res => res.json()).then(data => window.location = window.location.pathname)
        })

    } else {

        createGroupDiv.appendChild(createGroupHTML)
        let createGroupBtn = document.getElementById('createGroupBtn')

        createGroupBtn.addEventListener('click', async () => {
            const response = await fetch('createGroup', {
                method: 'post',
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    "id": 0
                })
            }).then(res => res.json()).then(data => window.location = window.location.pathname)
        })
        createGroupDiv.appendChild(createGroupHTML)
        manageGroupDiv.appendChild(joinGroupHTML)
    }
</script>

</html>
